{"version":3,"file":"index-a9a3c188.js","sources":["../../src/utils/composables/useMainPage.ts","../../src/layouts/components/Tools/index.vue"],"sourcesContent":["import router from '@/router'\r\n\r\nexport default function useMainPage() {\r\n  function reload() {\r\n    router.push({\r\n      name: 'reload',\r\n    })\r\n  }\r\n\r\n  return {\r\n    reload,\r\n  }\r\n}\r\n","<script lang=\"ts\">\nimport { defineComponent } from 'vue'\nexport default defineComponent({\n  name: 'Tools',\n})\n</script>\n<script lang=\"ts\" setup name=\"Tools\">\nimport { useFullscreen } from '@vueuse/core'\nimport eventBus from '@/utils/eventBus'\nimport useSettingsStore from '@/store/modules/settings'\nimport useUserStore from '@/store/modules/user'\n\nconst router = useRouter()\n\nconst settingsStore = useSettingsStore()\nconst userStore = useUserStore()\n\nconst mainPage = useMainPage()\nconst { isFullscreen, toggle } = useFullscreen()\n\nfunction userCommand(command: 'home' | 'setting' | 'hotkeys' | 'logout') {\n  switch (command) {\n    case 'home':\n      router.push({\n        name: 'home',\n      })\n      break\n    case 'setting':\n      router.push({\n        name: 'personalSetting',\n      })\n      break\n    case 'hotkeys':\n      eventBus.emit('global-hotkeys-intro-toggle')\n      break\n    case 'logout':\n      userStore.logout().then(() => {\n        router.push({\n          name: 'login',\n        })\n      })\n      break\n  }\n}\n</script>\n\n<template>\n  <div class=\"tools\">\n    <div class=\"buttons\">\n      <span v-if=\"settingsStore.settings.navSearch.enable\" class=\"item\" @click=\"eventBus.emit('global-search-toggle')\">\n        <el-icon>\n          <svg-icon name=\"ep:search\" />\n        </el-icon>\n      </span>\n      <span v-if=\"settingsStore.mode === 'pc' && settingsStore.settings.toolbar.enableFullscreen\" class=\"item\" @click=\"toggle\">\n        <el-icon>\n          <svg-icon :name=\"isFullscreen ? 'fullscreen-exit' : 'fullscreen'\" />\n        </el-icon>\n      </span>\n      <span v-if=\"settingsStore.settings.toolbar.enablePageReload\" class=\"item\" @click=\"mainPage.reload()\">\n        <el-icon>\n          <svg-icon name=\"ep:refresh-right\" />\n        </el-icon>\n      </span>\n      <span v-if=\"settingsStore.settings.toolbar.enableColorScheme\" class=\"item\" @click=\"settingsStore.setColorScheme(settingsStore.settings.app.colorScheme === 'dark' ? 'light' : 'dark')\">\n        <el-icon>\n          <svg-icon v-show=\"settingsStore.settings.app.colorScheme === 'light'\" name=\"ep:sunny\" />\n          <svg-icon v-show=\"settingsStore.settings.app.colorScheme === 'dark'\" name=\"ep:moon\" />\n        </el-icon>\n      </span>\n      <span v-if=\"settingsStore.settings.toolbar.enableAppSetting\" class=\"item\" @click=\"eventBus.emit('global-theme-toggle')\">\n        <el-icon>\n          <svg-icon name=\"ep:setting\" />\n        </el-icon>\n      </span>\n    </div>\n    <el-dropdown class=\"user-container\" size=\"default\" @command=\"userCommand\">\n      <div class=\"user-wrapper\">\n        <el-avatar size=\"small\">\n          <el-icon>\n            <svg-icon name=\"ep:user-filled\" />\n          </el-icon>\n        </el-avatar>\n        {{ userStore.name }}\n        <el-icon>\n          <svg-icon name=\"ep:caret-bottom\" />\n        </el-icon>\n      </div>\n      <template #dropdown>\n        <el-dropdown-menu class=\"user-dropdown\">\n          <el-dropdown-item v-if=\"settingsStore.settings.home.enable\" command=\"home\">\n            {{ settingsStore.settings.home.title }}\n          </el-dropdown-item>\n          <el-dropdown-item command=\"setting\">\n            个人设置\n          </el-dropdown-item>\n          <el-dropdown-item divided command=\"logout\">\n            退出登录\n          </el-dropdown-item>\n        </el-dropdown-menu>\n      </template>\n    </el-dropdown>\n  </div>\n</template>\n\n<style lang=\"scss\" scoped>\n.tools {\n  display: flex;\n  align-items: center;\n  padding: 0 20px;\n  white-space: nowrap;\n\n  .buttons {\n    margin-right: 20px;\n\n    .item {\n      display: inline-flex;\n      align-items: center;\n      justify-content: center;\n      height: 24px;\n      width: 34px;\n      cursor: pointer;\n      vertical-align: middle;\n\n      .el-icon {\n        color: var(--el-text-color-primary);\n        transition: var(--el-transition-color);\n      }\n    }\n  }\n}\n\n:deep(.user-container) {\n  display: inline-block;\n  height: 24px;\n  line-height: 24px;\n  cursor: pointer;\n\n  .user-wrapper {\n    .el-avatar {\n      vertical-align: middle;\n      margin-top: -2px;\n      margin-right: 4px;\n    }\n  }\n}\n</style>\n"],"names":["useMainPage","reload","router","__default__","defineComponent","useRouter","settingsStore","useSettingsStore","userStore","useUserStore","mainPage","isFullscreen","toggle","useFullscreen","userCommand","command","eventBus"],"mappings":"qhBAEA,SAAwBA,GAAc,CACpC,SAASC,GAAS,CAChBC,EAAO,KAAK,CACV,KAAM,QAAA,CACP,CACH,CAEO,MAAA,CACL,OAAAD,CAAA,CAEJ,sECVAE,EAAAC,EAAA,CAA+B,KAAA,OAE/B,CAAA,qBAQA,MAAAF,EAAAG,IAEAC,EAAAC,IACAC,EAAAC,IAEAC,EAAAV,IACA,CAAA,aAAAW,EAAA,OAAAC,CAAA,EAAAC,EAAA,EAEA,SAAAC,EAAAC,EAAA,CACE,OAAAA,EAAA,CAAiB,IAAA,OAEbb,EAAA,KAAA,CAAY,KAAA,MACJ,CAAA,EAER,MAAA,IAAA,UAEAA,EAAA,KAAA,CAAY,KAAA,iBACJ,CAAA,EAER,MAAA,IAAA,UAEAc,EAAA,KAAA,6BAAA,EACA,MAAA,IAAA,SAEAR,EAAA,SAAA,KAAA,IAAA,CACEN,EAAA,KAAA,CAAY,KAAA,OACJ,CAAA,CACP,CAAA,EAEH,KAAA,CACJ"}